{"mappings":"AAAA;AAEA,MAAM,OAAO,SAAS,aAAa,CAAC;AACpC,MAAM,YAAY,SAAS,gBAAgB,CAAC;AAE5C,MAAM,WAAW;IACf;WAAI;KAAU,CACX,IAAI,CAAC,CAAC,GAAG,IAAM,SAAS,EAAE,OAAO,CAAC,MAAM,IAAI,SAAS,EAAE,OAAO,CAAC,MAAM,GACrE,GAAG,CAAC,CAAC,WAAa,KAAK,MAAM,CAAC;AACnC;AAEA,MAAM,WAAW,CAAC,SAAW,CAAC,OAAO,OAAO,CAAC,SAAS;AAEtD,MAAM,eAAe;IACnB;WAAI;KAAU,CAAC,GAAG,CAAC,CAAC,WAAc,CAAA;YAChC,MAAM,SAAS,WAAW;YAC1B,UAAU,SAAS,OAAO,CAAC,QAAQ;YACnC,QAAQ,SAAS,OAAO,CAAC,MAAM;YAC/B,KAAK,SAAS,OAAO,CAAC,GAAG;QAC3B,CAAA;AACF;AAEA;AACA","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst list = document.querySelector('ul');\nconst listItems = document.querySelectorAll('li');\n\nconst sortList = () => {\n  [...listItems]\n    .sort((a, b) => toNumber(b.dataset.salary) - toNumber(a.dataset.salary))\n    .map((employee) => list.append(employee));\n};\n\nconst toNumber = (salary) => +salary.replace(/[$,]/g, '');\n\nconst getEmployees = () => {\n  [...listItems].map((employee) => ({\n    name: employee.textContent,\n    position: employee.dataset.position,\n    salary: employee.dataset.salary,\n    age: employee.dataset.age,\n  }));\n};\n\nsortList();\ngetEmployees();\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}